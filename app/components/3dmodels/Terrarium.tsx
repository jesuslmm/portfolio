/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/terrarium/terrarium.gltf -t -r public
Author: ChrisLee (https://sketchfab.com/chrisleeX)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/terrarium-bot-2040185592db48b29b50d2d6e465bd7c
Title: Terrarium Bot
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    NurbsPath002_pipes_0: THREE.Mesh;
    connector_low_robot_1_0: THREE.Mesh;
    achse_low_robot_1_0: THREE.Mesh;
    angle_low_robot_1_0: THREE.Mesh;
    motor_low_robot_2_0: THREE.Mesh;
    plate_low_robot_2_0: THREE.Mesh;
    ring_low_robot_2_0: THREE.Mesh;
    face_low_robot_2_0: THREE.Mesh;
    baseblock_low_robot_2_0: THREE.Mesh;
    pipe_low_robot_2_0: THREE.Mesh;
    base_low_robot_1_0: THREE.Mesh;
    ground_ground_0: THREE.Mesh;
    basebottom_low_robot_1_0: THREE.Mesh;
    legs_low_robot_2_0: THREE.Mesh;
    glas_low_glass_0: THREE.Mesh;
    gravel_inside_0: THREE.Mesh;
  };
  materials: {
    pipes: THREE.MeshStandardMaterial;
    robot_1: THREE.MeshStandardMaterial;
    robot_2: THREE.MeshStandardMaterial;
    ground: THREE.MeshStandardMaterial;
    glass: THREE.MeshPhysicalMaterial;
    inside: THREE.MeshStandardMaterial;
  };
};

export default function Terrarium(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/terrarium/terrarium.gltf"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.NurbsPath002_pipes_0.geometry}
        material={materials.pipes}
        position={[-355.32, -118.47, 275.258]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.connector_low_robot_1_0.geometry}
        material={materials.robot_1}
        position={[-373.49, -34.567, -25.818]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.achse_low_robot_1_0.geometry}
        material={materials.robot_1}
        position={[-373.49, -34.567, -25.818]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.angle_low_robot_1_0.geometry}
        material={materials.robot_1}
        position={[-373.49, -34.567, -25.818]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.motor_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.plate_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.ring_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.face_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.baseblock_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.pipe_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.base_low_robot_1_0.geometry}
        material={materials.robot_1}
        position={[-373.49, -34.567, -25.818]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.ground_ground_0.geometry}
        material={materials.ground}
        position={[-442.718, -159.643, 83.594]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.basebottom_low_robot_1_0.geometry}
        material={materials.robot_1}
        position={[-373.49, -34.567, -25.818]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.legs_low_robot_2_0.geometry}
        material={materials.robot_2}
        position={[-372.645, 32.001, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.glas_low_glass_0.geometry}
        material={materials.glass}
        position={[-372.645, 152.855, -23.761]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.gravel_inside_0.geometry}
        material={materials.inside}
        position={[-357.261, 88.895, -57.245]}
        rotation={[-1.064, 0.476, -2.15]}
        scale={11.874}
      />
    </group>
  );
}

useGLTF.preload("/terrarium/terrarium.gltf");
