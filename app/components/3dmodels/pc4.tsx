/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/pc4/scene.gltf -t -r public
Author: Smoothie 3D (https://sketchfab.com/arisyn08)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/70s-retro-computer-asset-old-commodore-pet-8bc5b66e5b6147888294862705e0671b
Title: 70's Retro Computer Asset - Old Commodore PET
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_6: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_9: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    Case: THREE.MeshStandardMaterial;
    Black_Plastic: THREE.MeshStandardMaterial;
    Shiny: THREE.MeshStandardMaterial;
    Front_Texture: THREE.MeshStandardMaterial;
    Screen: THREE.MeshStandardMaterial;
  };
};

export default function Pc4(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/pc4/scene.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.6}>
      <mesh geometry={nodes.Object_4.geometry} material={materials.Material} />
      <mesh geometry={nodes.Object_5.geometry} material={materials.Case} />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials.Black_Plastic}
      />
      <mesh geometry={nodes.Object_7.geometry} material={materials.Shiny} />
      <mesh
        geometry={nodes.Object_8.geometry}
        material={materials.Front_Texture}
      />
      <mesh geometry={nodes.Object_9.geometry} material={materials.Screen} />
    </group>
  );
}

useGLTF.preload("/pc4/scene.gltf");
